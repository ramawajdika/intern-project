{"version":3,"sources":["assets/logo.svg","components/LandingPage.jsx","components/Navigation.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LandingPage","react_default","a","createElement","className","Container","id","Row","Col","Component","Navigation","Navbar","collapseOnSelect","expand","Brand","react_router_dom","Image","src","logo","Toggle","aria-controls","Collapse","Nav","Link","href","class","Button","variant","App","src_components_Navigation","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69d343e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f3535eec.svg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Jumbotron, Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport \"./LandingPage.css\";\r\n\r\nexport default class LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"bg\" />\r\n        <Container className=\"content\">\r\n          <div className=\"case\">\r\n            <div className=\"assist\">\r\n              <h1 id=\"header\">Assisting Companies Since 2016</h1>\r\n            </div>\r\n\r\n            <div className=\"content-number\">\r\n              <Row id=\"total\">\r\n                <Col className=\"total-each\">\r\n                  <div>\r\n                    <h2 className=\"amount\">\r\n                      4,000<span className=\"plus\">+</span>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"info\">Applicants Applied</div>\r\n                </Col>\r\n                <Col className=\"total-each\">\r\n                  <div>\r\n                    <h2 className=\"amount\">\r\n                      2,000<span className=\"plus\">+</span>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"info\">Candidates Hired</div>\r\n                </Col>\r\n                <Col className=\"total-each\">\r\n                  <div>\r\n                    <h2 className=\"amount\">\r\n                      5,000<span className=\"plus\">+</span>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"info\">Company Subscriptions</div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, NavItem, Image, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../assets/logo.svg\";\r\nimport \"./Navigation.css\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"lg\">\r\n        <Navbar.Brand>\r\n          <Link>\r\n            <Image src={logo} className=\"header-brand\" />\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\" />\r\n          <Nav>\r\n            <Nav.Link href=\"\">Home</Nav.Link>\r\n            <Nav.Link href=\"\">Products</Nav.Link>\r\n            <Nav.Link href=\"\">Pricing</Nav.Link>\r\n            <Nav.Link href=\"\">Customers</Nav.Link>\r\n            <Nav.Link href=\"\">Partners</Nav.Link>\r\n            <Nav.Link href=\"\">Job Search</Nav.Link>\r\n            <div class=\"vl\" />\r\n            <div id=\"login\">\r\n              <Nav.Link href=\"\">Login</Nav.Link>\r\n            </div>\r\n\r\n            <Nav.Link href=\"\" />\r\n            <Button id=\"try-button\" variant=\"success\">\r\n              Try for free\r\n            </Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport LandingPage from \"./components/LandingPage\";\nimport Navbar from \"./components/Navigation\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <div>\n          <Route exact path=\"/intern-project/\" component={LandingPage} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}